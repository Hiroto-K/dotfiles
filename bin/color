#!/usr/bin/env ruby

BLACK  = "0;30".freeze
RED    = "0;31".freeze
GREEN  = "0;32".freeze
BROWN  = "0;33".freeze
NAVY   = "0;34".freeze
PURPLE = "0;35".freeze
CYAN   = "0;36".freeze
GRAY   = "0;37".freeze
DIM    = "1;30".freeze
ORANGE = "1;31".freeze
LIME   = "1;32".freeze
YELLOW = "1;33".freeze
BLUE   = "1;34".freeze
PINK   = "1;35".freeze
AQUA   = "1;36".freeze
WHITE  = "1;37".freeze

@colors = [
  ORANGE,
  CYAN,
  LIME,
  PURPLE,
  YELLOW,
  NAVY,
  PINK,
  GREEN,
  BLUE,
  BROWN,
  AQUA,
  RED,
  WHITE,
  GRAY,
  DIM,
  BLACK,
].freeze

def color(src, color)
  head = "\x1b[#{color}m"
  tail = "\x1b[0m"
  "#{head}#{src}#{tail}"
end

def color_line(line)
  splitted = []
  token = ""
  state = ""
  line.chars do |c|
    token << c
    case c
      when '"'
        if state == ""
          state = '"'
        elsif state == '"'
          splitted << token
          token = ""
          state = ""
        end
      when "[", "("
        next if state == '"'
        state = c
      when "]", ")"
        next if state == '"'
        splitted << token
        token = ""
        state = ""
      when " "
        next if ["[", "(", '"'].include?(state)
        splitted << token
        token = ""
    end
  end

  splitted << token
  splitted
  .zip(@colors)
  .map {|x| color(x[0], x[1]) }
  .join("")
end

while line = STDIN.gets
  STDOUT.print(color_line(line))
end